plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.4'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'yuyuhee_2th'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'

    // Basic Data Source
    implementation 'org.apache.commons:commons-dbcp2'
    implementation 'org.apache.commons:commons-lang3:3.18.0'

	// Jakarta
	implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
	compileOnly 'jakarta.servlet.jsp:jakarta.servlet.jsp-api:4.0.0'
	implementation 'jakarta.el:jakarta.el-api:5.0.0'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api:3.0.2'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl:3.0.1'
	implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0'

	// Markdown
	implementation 'org.commonmark:commonmark:0.21.0'

	// Security
	implementation 'org.springframework.security:spring-security-taglibs'

	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Hibernate
	//implementation 'org.hibernate.orm:hibernate-community-dialects'

	// Parameter validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Maria DB
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'

	// junit
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}


tasks.named('test') {
	useJUnitPlatform()
}
